---
# tasks file for alloy

  #.......................................  
- block:

  - name: Package install
    ansible.builtin.include_tasks:
      file: "../../shared/grafana/tasks/{{ ansible_distribution }}-install.yml"
    vars:
      package: alloy

  ##################
  # Configure

  # - name: Template config to  /etc/alloy/config.alloy
  #   ansible.builtin.copy:
  #     src: "{{ item}}"
  #     dest: /etc/alloy/
  #   with_fileglob:
  #     - "*.alloy"
  #   become: true

  - name: "Template config  in /etc/alloy/config.allow "
    ansible.builtin.template:
      src: client-config-alloy.j2
      dest: /etc/alloy/config.alloy
    become: true

  - name: "Template config  in /etc/default/alloy"
    ansible.builtin.template:
      src: etc-default-alloy.j2
      dest: /etc/default/alloy
    become: true

  ##################
  # Restart Service

  # - name: systemd reload configs and restart Loki
  #   ansible.builtin.systemd_service:
  #     daemon_reload: true
  #     name: loki
  #     state: restarted
  #     enabled: true
  #   become: true

  when: alloy_state == 'present'

  #.......................................  
- block:

  - block:

    # NOTE:  you have to remove all the config files before the package
    # THey have a script that tracks them and messes up the remove.

    - name: "Remove Grafana-Alloy configuration files"
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      become: true
      loop:
        - /etc/default/alloy
        - /etc/alloy
      register: file_cleanup
      ignore_errors: "{{ ansible_check_mode }}"
      failed_when: 
        - file_cleanup.failed is defined
        - file_cleanup.failed and not ansible_check_mode


    when: alloy_delete_config

  - name: Package remove
    ansible.builtin.include_tasks:
      file: "../../shared/any/tasks/{{ ansible_distribution }}-rm.yml"
    vars:
      package: alloy
      service_name: allow.service

  - name: "Remove the data files"
    ansible.builtin.file:
      path: /var/lib/alloy
      state: absent
      register: file_cleanup
      ignore_errors: "{{ ansible_check_mode }}"
    failed_when: 
      - file_cleanup.failed is defined
      - file_cleanup.failed and not ansible_check_mode
    become: true
    when: alloy_delete_data

  when: alloy_state == 'absent'
