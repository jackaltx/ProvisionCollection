---
# tasks file for influxdb

- block:

  - name: Include task list in play
    ansible.builtin.import_tasks:
      file: apt-repo-setup.yml

  ##################
  # Configure

  - name: "Prepare /etc/influxd"
    ansible.builtin.file:
      path: /etc/influxdb
      state: directory
    become: true

  - name: "Template config for storage in /etc/influxd"
    ansible.builtin.template:
      src: config.toml.j2
      dest: /etc/influxdb/config.toml
    become: true

  - name: Restart service influxd, if running
    ansible.builtin.systemd_service:
      name: influxd
      state: restarted
    become: true

  - name: Initialize a new influxdb instance
    block:

    - name: "create initial user"
      ansible.builtin.shell:
        cmd: "/usr/bin/influx setup --org {{ influxdb_org }} --bucket {{ influxdb_bucket }} --username {{ influxdb_username }} --password {{ influxdb_password }} --force"
      register: initialization_result
      failed_when: initialization_result.rc != 0
      become: true

    - name: "create initial admin token"
      ansible.builtin.shell:
        cmd: influx auth create --org lavnet --all-access --description admin
      become: true

    - name: "create initial operator token"
      ansible.builtin.shell:
        cmd: influx auth create --org lavnet --operator --description operator
      become: true

    - name: "import dashboard template"
      ansible.builtin.shell:
        cmd: influx apply -u https://raw.githubusercontent.com/influxdata/community-templates/master/linux_system/linux_system.yml
      become: true

    rescue:
      - name: Print when errors
        ansible.builtin.debug:
          msg: "Cannot be setup via ansible.\n The script cannot access SSL and/or it was already setup once!!!"

    
  when: influxdb_state == 'present'

- block:

  - name: Stop service influxd, if running
    ansible.builtin.systemd_service:
      name: influxd
      state: stopped
    become: true

  - name: "Remove Influxd package"
    ansible.builtin.apt:
      update_cache: true
      pkg:
        - influxdb2
        - influxdb-cli
      autoremove: true
      autoclean: true
      state: absent
    become: true

  - block:

    - name: "Remove the config files"
      ansible.builtin.file:
        path: /etc/influxdb
        state: absent
      become: true

    - name: "Remove the root config files"
      ansible.builtin.file:
        path: /root/.influxdbv2
        state: absent
      become: true

    when: influxdb_delete_config

  - name: "Remove the data files in {{ influxdb_data_path }}/influxdb"
    ansible.builtin.file:
      path: "{{ influxdb_data_path }}"
      state: absent
    become: true
    when: influxdb_delete_data

  when: influxdb_state == 'absent'