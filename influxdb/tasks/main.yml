---
# tasks file for influxdb

#=============================================================================================================
# Install block
#
- block:

  - name: Package install
    ansible.builtin.include_tasks:
      file: "../../shared/influxdb/tasks/{{ ansible_distribution }}-install.yml"
    vars:
      package: influxdb2


  ##################
  # Configure

  - name: "Prepare /etc/influxd"
    ansible.builtin.file:
      path: /etc/influxdb
      state: directory
    become: true

  - name: "Template config for storage in /etc/influxd"
    ansible.builtin.template:
      src: config.toml.j2
      dest: /etc/influxdb/config.toml
    become: true

  - name: Restart service influxd, if running
    ansible.builtin.systemd_service:
      name: influxd
      state: restarted
    become: true

  #.........................
  # This captures the failure just in case it already exists!!!! 
  #

  - name: Initialize the new influxdb instance (note, must be running)
    block:

    - include_tasks: initializedb.yml
 
    rescue:
        - block:

          - name: Maybe and exiting setup, so get auth list from a cmd, register output
            ansible.builtin.command: '/usr/bin/influx auth list --json'
            become: true
            register: cmd_result
            failed_when: cmd_result.rc != 0

          - name: converting json to list of dictionaries
            set_fact:
              full_list: "{{ cmd_result.stdout| from_json }}"

          - name:  This is used by telegraf.
            set_fact:
              influx_operators_token: "{{ (full_list|selectattr('description', 'search', 'operator')|list|first).token }}"

          rescue:
            - name: Print when errors
              ansible.builtin.debug:
                msg: "Telegraf cannot be setup via ansible.\n The script cannot access SSL and/or some other wierd setup."
   
  when: influxdb_state == 'present'


#=============================================================================================================
#  Remove Block
#
- block:

  - name: Package remove
    ansible.builtin.include_tasks:
      file: "../../shared/any/tasks/{{ ansible_distribution }}-rm.yml"
    vars:
      package: influxdb2
      service_name: influxd.service

  #.........................
  - block:

    - name: "Remove the default file"
      ansible.builtin.file:
        path: /etc/default/influxdb2
        state: absent
      become: true

    - name: "Remove the config files"
      ansible.builtin.file:
        path: /etc/influxdb
        state: absent
      become: true

    - name: "Remove the root config files"
      ansible.builtin.file:
        path: /root/.influxdbv2
        state: absent
      become: true

    when: influxdb_delete_config

  #.........................
  - name: "Remove the data files in {{ influxdb_data_path }}"
    ansible.builtin.file:
      path: "{{ influxdb_data_path }}"
      state: absent
    become: true
    when: influxdb_delete_data
    

  when: influxdb_state == 'absent'