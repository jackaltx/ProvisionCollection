---
# tasks file for telegraf


- block: 

  - name: Package install
    ansible.builtin.include_tasks:
      file: "../../shared/influxdb/tasks/{{ ansible_distribution }}-install.yml"
    vars:
      package: telegraf

  ##################
  # Configure

  - name: Configure the plugins
    ansible.builtin.include_tasks:
      file: telegrafd-setup.yml

  - name: sometimes /etc/telegraf.conf does not get create???
    ansible.builtin.copy:
      src: telegraf.conf
      dest: /etc/telegraf/telegraf.conf
    become: true

  # All the secrets are passed in via an evironment file
  - name: copy config to /etc/default/telegraf
    ansible.builtin.copy:
      src: "{{ influx_defaults }}"
      dest: /etc/default/telegraf
      group: telegraf
      mode: 0640
      decrypt: true
      force: true
    register: config_status
    become: true

  - ansible.builtin.debug:
      var: config_status
      verbosity: 1


  # SMELL: Used for an HTTPS influxdb.  This might should be elsewhere.
  - name: copy lets encrypt CA  to  /etc/ssl/certs/
    ansible.builtin.copy:
      src: lets_encrypt_ca.cer 
      dest: /etc/ssl/certs/lets_encrypt_ca.cer
      mode: 0644
    become: true

  ##################
  # Restart Service

  - name: systemd reload configs and restart telegraf
    ansible.builtin.systemd_service:
      daemon_reload: true
      name: telegraf
      state: restarted
      enabled: true
    become: true


  when: telegraf_state == 'present'

- block:

  - name: Package remove
    ansible.builtin.include_tasks:
      file: "../../shared/influxdb/tasks/{{ ansible_distribution }}-rm.yml"
    vars:
      package: telegraf

  - block:

    - name: "Remove the config files at /etc/telegraf"
      ansible.builtin.file:
        path: /etc/telegraf
        state: absent
      become: true

    - name: "Remove the default file"
      ansible.builtin.file:
        path: /etc/default/telegraf
        state: absent
      become: true
      
    when: influx_delete_config

  - name: "Remove the data files"
    ansible.builtin.file:
      path: /var/lib/telegraf
      state: absent
    become: true
    when: influx_delete_data

  when: telegraf_state == 'absent'