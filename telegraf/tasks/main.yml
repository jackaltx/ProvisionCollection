---
# tasks file for telegraf


- block: 

  - name: Package install
    ansible.builtin.include_tasks:
      file: "../../shared/influxdb/tasks/{{ ansible_distribution }}-install.yml"
    vars:
      package: telegraf

  ##################
  # Configure

  - name: sometimes /etc/telegraf.conf does not get created???
    ansible.builtin.copy:
      src: telegraf.conf
      dest: /etc/telegraf/telegraf.conf
    become: true
    notify: 
      - restart telegraf

  - name: Configure the inputs to collect
    ansible.builtin.include_tasks:
      file: telegrafd-inputs-setup.yml

  - name: configure outputs to influxdb
    ansible.builtin.include_tasks:
      file: telegrafd-outputs-setup.yml

  - name: edge case, when the URL is localhost and it empty, then set it up
    ansible.builtin.include_tasks:
      file: influxdb-localhost-operators-token.yml

  - name: Configure /etc/default/telegraf file
    ansible.builtin.include_tasks:
      file: telegrafd-default-setup.yml
 
  when: telegraf_state == 'present'


######################################################################################
# Remove Telegraf Service
#
- block:

  #.......................................................................
  - name: Package remove
    ansible.builtin.include_tasks:
      file: "../../shared/any/tasks/{{ ansible_distribution }}-rm.yml"
    vars:
      package: 'telegraf'
      service_name: 'telegraf.service'

  # .......................................................................
  - block:

    - name: "Remove Telegraf configuration files"
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      become: true
      loop:
        - /etc/default/telegraf
        - /etc/telegraf
      register: file_cleanup
      ignore_errors: "{{ ansible_check_mode }}"
      failed_when: 
        - file_cleanup.failed is defined
        - file_cleanup.failed and not ansible_check_mode
      when: telegraf_delete_config

  - name: "Remove the Telegraf data files"
    ansible.builtin.file:
      path: /var/lib/telegraf
      state: absent
    become: true
    register: file_cleanup
    ignore_errors: "{{ ansible_check_mode }}"
    failed_when: 
      - file_cleanup.failed is defined
      - file_cleanup.failed and not ansible_check_mode
    when: telegraf_delete_data

  - debug:
      var: telegraf_delete_data

  when: telegraf_state == 'absent'
