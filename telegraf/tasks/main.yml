---
# tasks file for telegraf


- block: 

  - name: Package install
    ansible.builtin.include_tasks:
      file: "../../shared/influxdb/tasks/{{ ansible_distribution }}-install.yml"
    vars:
      package: telegraf

  ##################
  # Configure

  - name: Configure the plugins
    ansible.builtin.include_tasks:
      file: telegrafd-setup.yml

  - name: sometimes /etc/telegraf.conf does not get created???
    ansible.builtin.copy:
      src: telegraf.conf
      dest: /etc/telegraf/telegraf.conf
    become: true

  - name: Configure default file
    ansible.builtin.include_tasks:
      file: telegrafd-default-setup.yml

  when: telegraf_state == 'present'


######################################################################################
# Remove Telegraf Service
#
- block:



  #...................................................
  # - name: Populate service facts
  #   ansible.builtin.service_facts:

  # - debug:
  #     var: ansible_facts.services

  # - set_fact:
  #     service_running: "{{ true if ansible_facts.services['telegraf.service'].state is defined else false }}"


  # - name : "Is the service: {{ package }} running?"
  #   debug:
  #     var: service_running
  #     verbosity: 0

  # - name: "Systemd stop {{ package }}"
  #   ansible.builtin.systemd_service:
  #     name: "telegraf"
  #     state: stopped
  #     ignore_errors: true
  #   register: cmd_results
  #   when:  service_running
  #   become: true

  # - name : " {{ package }} stopped results"
  #   debug:
  #     var: cmd_results
  #     verbosity: 0





  #...........................................
  - name: Package remove
    ansible.builtin.include_tasks:
      file: "../../shared/any/tasks/{{ ansible_distribution }}-rm.yml"
    vars:
      package: 'telegraf'
      service_name: 'telegraf.service'

  # ...............................................................
  - block:

    - name: "Remove the config files at /etc/telegraf"
      ansible.builtin.file:
        path: /etc/telegraf
        state: absent
      become: true

    - name: "Remove the default file"
      ansible.builtin.file:
        path: /etc/default/telegraf
        state: absent
      become: true
      
    when: influx_delete_config

  - name: "Remove the data files"
    ansible.builtin.file:
      path: /var/lib/telegraf
      state: absent
    become: true
    when: influx_delete_data

  when: telegraf_state == 'absent'